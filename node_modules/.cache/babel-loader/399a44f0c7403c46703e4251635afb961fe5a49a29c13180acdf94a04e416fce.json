{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDgyedyGtko6U95FFF4WiBSfYmqD3tXXAY\",\n  authDomain: \"crwn-clothing-db-2f969.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-2f969\",\n  storageBucket: \"crwn-clothing-db-2f969.appspot.com\",\n  messagingSenderId: \"132677052582\",\n  appId: \"1:132677052582:web:d39daf1239f93f685cec67\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  // Creates and return the user collection on the data base with the user id\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  // If user data does not exists\n  // Create / set the document with the data from userAuth in my collection\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log(\"Error creating the user\", error.message);\n    }\n  }\n\n  // If user data exist return userDocRef\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password, displayName) => {\n  if (!email || !password) return;\n  const createdUser = await createUserWithEmailAndPassword(auth, email, password);\n  return createdUser;\n};\nconst signInWithEmailAndPasswordMethod = async event => {\n  event.preventDefault();\n  try {\n    const {\n      user\n    } = await signInWithEmailAndPassword(auth, email, password);\n    console.log(user);\n    resetFormFields();\n    alert(\"You have been sucessfully signed in. Welcome.\");\n  } catch (error) {\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    if (errorCode === \"auth/user-not-found\") alert(\"User not found. Please try again.\");\n    console.error(\"Something went wrong\", errorCode);\n    return;\n  }\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocumentFromAuth","userAuth","additionalInformation","arguments","length","undefined","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message","createAuthUserWithEmailAndPassword","password","createdUser","signInWithEmailAndPasswordMethod","event","preventDefault","user","resetFormFields","alert","errorCode","code","errorMessage"],"sources":["/Users/pedrohvasconcelos/rock-clothing/rock-clothing/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDgyedyGtko6U95FFF4WiBSfYmqD3tXXAY\",\n  authDomain: \"crwn-clothing-db-2f969.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-2f969\",\n  storageBucket: \"crwn-clothing-db-2f969.appspot.com\",\n  messagingSenderId: \"132677052582\",\n  appId: \"1:132677052582:web:d39daf1239f93f685cec67\",\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\",\n});\n\nexport const auth = getAuth();\n\nexport const signInWithGooglePopup = () =>\n  signInWithPopup(auth, googleProvider);\n\nexport const db = getFirestore();\n\nexport const createUserDocumentFromAuth = async (\n  userAuth,\n  additionalInformation = {}\n) => {\n  if (!userAuth) return;\n  // Creates and return the user collection on the data base with the user id\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n\n  const userSnapshot = await getDoc(userDocRef);\n\n  // If user data does not exists\n  // Create / set the document with the data from userAuth in my collection\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation,\n      });\n    } catch (error) {\n      console.log(\"Error creating the user\", error.message);\n    }\n  }\n\n  // If user data exist return userDocRef\n\n  return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (\n  email,\n  password,\n  displayName\n) => {\n  if (!email || !password) return;\n\n  const createdUser = await createUserWithEmailAndPassword(\n    auth,\n    email,\n    password\n  );\n\n  return createdUser;\n};\n\nconst signInWithEmailAndPasswordMethod = async (event) => {\n  event.preventDefault();\n\n  try {\n    const { user } = await signInWithEmailAndPassword(auth, email, password);\n\n    console.log(user);\n    resetFormFields();\n    alert(\"You have been sucessfully signed in. Welcome.\");\n  } catch (error) {\n    const errorCode = error.code;\n    const errorMessage = error.message;\n\n    if (errorCode === \"auth/user-not-found\")\n      alert(\"User not found. Please try again.\");\n    console.error(\"Something went wrong\", errorCode);\n    return;\n  }\n};\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SACEC,OAAO,EACPC,kBAAkB,EAClBC,eAAe,EACfC,kBAAkB,EAClBC,8BAA8B,EAC9BC,0BAA0B,QACrB,eAAe;AAEtB,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;;AAEtE;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,wCAAwC;EACpDC,SAAS,EAAE,wBAAwB;EACnCC,aAAa,EAAE,oCAAoC;EACnDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGlB,aAAa,CAACW,cAAc,CAAC;AAEjD,MAAMQ,cAAc,GAAG,IAAIf,kBAAkB,EAAE;AAE/Ce,cAAc,CAACC,mBAAmB,CAAC;EACjCC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,OAAO,MAAMC,IAAI,GAAGrB,OAAO,EAAE;AAE7B,OAAO,MAAMsB,qBAAqB,GAAGA,CAAA,KACnCpB,eAAe,CAACmB,IAAI,EAAEH,cAAc,CAAC;AAEvC,OAAO,MAAMK,EAAE,GAAGjB,YAAY,EAAE;AAEhC,OAAO,MAAMkB,0BAA0B,GAAG,eAAAA,CACxCC,QAAQ,EAEL;EAAA,IADHC,qBAAqB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAE1B,IAAI,CAACF,QAAQ,EAAE;EACf;EACA,MAAMK,UAAU,GAAGvB,GAAG,CAACgB,EAAE,EAAE,OAAO,EAAEE,QAAQ,CAACM,GAAG,CAAC;EAEjD,MAAMC,YAAY,GAAG,MAAMxB,MAAM,CAACsB,UAAU,CAAC;;EAE7C;EACA;;EAEA,IAAI,CAACE,YAAY,CAACC,MAAM,EAAE,EAAE;IAC1B,MAAM;MAAEC,WAAW;MAAEC;IAAM,CAAC,GAAGV,QAAQ;IACvC,MAAMW,SAAS,GAAG,IAAIC,IAAI,EAAE;IAE5B,IAAI;MACF,MAAM5B,MAAM,CAACqB,UAAU,EAAE;QACvBI,WAAW;QACXC,KAAK;QACLC,SAAS;QACT,GAAGV;MACL,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAACG,OAAO,CAAC;IACvD;EACF;;EAEA;;EAEA,OAAOX,UAAU;AACnB,CAAC;AAED,OAAO,MAAMY,kCAAkC,GAAG,MAAAA,CAChDP,KAAK,EACLQ,QAAQ,EACRT,WAAW,KACR;EACH,IAAI,CAACC,KAAK,IAAI,CAACQ,QAAQ,EAAE;EAEzB,MAAMC,WAAW,GAAG,MAAMxC,8BAA8B,CACtDiB,IAAI,EACJc,KAAK,EACLQ,QAAQ,CACT;EAED,OAAOC,WAAW;AACpB,CAAC;AAED,MAAMC,gCAAgC,GAAG,MAAOC,KAAK,IAAK;EACxDA,KAAK,CAACC,cAAc,EAAE;EAEtB,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAM3C,0BAA0B,CAACgB,IAAI,EAAEc,KAAK,EAAEQ,QAAQ,CAAC;IAExEJ,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;IACjBC,eAAe,EAAE;IACjBC,KAAK,CAAC,+CAA+C,CAAC;EACxD,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACd,MAAMa,SAAS,GAAGb,KAAK,CAACc,IAAI;IAC5B,MAAMC,YAAY,GAAGf,KAAK,CAACG,OAAO;IAElC,IAAIU,SAAS,KAAK,qBAAqB,EACrCD,KAAK,CAAC,mCAAmC,CAAC;IAC5CX,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEa,SAAS,CAAC;IAChD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}